# Используем официальный образ Python.
# python:3.9-slim - хороший баланс между размером и наличием необходимых инструментов.
FROM python:3.9-slim

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Устанавливаем переменные окружения, чтобы Python выводил логи сразу,
# а не буферизовал их, и не создавал .pyc файлы.
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Обновляем pip и устанавливаем зависимости
# Копируем сначала только requirements.txt, чтобы Docker мог кэшировать этот слой,
# если зависимости не менялись. Это ускоряет последующие сборки.
COPY ./requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Копируем весь код проекта в рабочую директорию /app
# Убедитесь, что в корне проекта есть файл .dockerignore, чтобы не копировать лишнее (venv, .git и т.д.)
COPY . .

# Команда, которая будет выполняться при запуске контейнера.
# Используем `python -m bot`, так как у вас в коде есть относительные импорты,
# рассчитанные на запуск модуля `bot`.
CMD ["python", "-m", "bot"]

